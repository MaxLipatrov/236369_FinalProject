{"ast":null,"code":"var _jsxFileName = \"/home/max/PycharmProjects/236369/Final_Project/ReactApp/src/Component/Login.js\";\nimport React, { Component } from 'react';\nimport Alert from \"reactstrap/es/Alert\";\nimport axios from \"axios\";\nexport const login = user => {\n  axios.defaults.withCredentials = true;\n  return axios.post('http://127.0.0.1:5000/login', {\n    email: user.email,\n    password: user.password\n  }).then(response => {\n    localStorage.setItem('usertoken', response.data);\n    return response.data;\n  }).catch(err => {\n    console.log(err);\n    return 'error';\n  });\n};\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {\n        email: '',\n        password: ''\n      },\n      invalid: 0\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    e.preventDefault();\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'email':\n        errors.email = validEmailRegex.test(value) && value.length <= 120 ? '' : 'Email is not valid!';\n        break;\n\n      case 'password':\n        errors.password = value.length < 1 || value.length > 60 ? 'Password is not valid!' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      errors,\n      [name]: value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      invalid: 0\n    });\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    if (validateForm(this.state.errors)) {\n      login(user).then(res => {\n        if (res != 'error') {\n          this.props.history.push(`/`);\n        } else {\n          this.setState({\n            invalid: 1\n          });\n        }\n      });\n    } else {\n      this.setState({\n        invalid: 1\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 mt-5 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h3 mb-3 font-weight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.invalid > 0 && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Invalid email or password. Please try again!\"), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      placeholder: \"Enter email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), this.state.errors.email.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.errors.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), this.state.errors.password.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.errors.password)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-lg btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Sign in\")))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/max/PycharmProjects/236369/Final_Project/ReactApp/src/Component/Login.js"],"names":["React","Component","Alert","axios","login","user","defaults","withCredentials","post","email","password","then","response","localStorage","setItem","data","catch","err","console","log","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","Login","constructor","state","invalid","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","test","res","props","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Alert from \"reactstrap/es/Alert\";\nimport axios from \"axios\";\n\n\nexport const login = user => {\n  axios.defaults.withCredentials = true;\n  return axios\n      .post('http://127.0.0.1:5000/login', {\n        email: user.email,\n        password: user.password\n      })\n      .then(response => {\n        localStorage.setItem('usertoken', response.data)\n        return response.data\n      })\n      .catch(err => {\n        console.log(err)\n        return 'error'\n      })\n}\n\nconst validEmailRegex =\n  RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = (errors) => {\n  let valid = true;\n  Object.values(errors).forEach(\n    (val) => val.length > 0 && (valid = false)\n  );\n  return valid;\n}\nclass Login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      errors: {\n        email: '',\n        password: '',\n      },\n      invalid: 0\n\n    };\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n    e.preventDefault();\n    const { name, value } = e.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'email':\n        errors.email =\n          validEmailRegex.test(value)  && value.length <= 120\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'password':\n        errors.password =\n          value.length < 1 || value.length > 60\n            ? 'Password is not valid!'\n            : '';\n        break;\n      default:\n        break;\n    }\n    this.setState({errors, [name]: value});\n  }\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({invalid: 0});\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    if(validateForm(this.state.errors)) {\n      login(user).then(res => {\n      if (res != 'error') {\n        this.props.history.push(`/`)\n      }\n      else {\n        this.setState({invalid: 1});\n        }\n      })\n\n    }\n    else{\n        this.setState({invalid: 1});\n    }\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-5 mx-auto\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <h1 className=\"h3 mb-3 font-weight-normal\">Sign in</h1>\n              <div className=\"form-group\">\n                {this.state.invalid >0 &&  <Alert color=\"danger\">\n                  Invalid email or password. Please try again!\n                </Alert> }\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  noValidate\n                />\n                {this.state.errors.email.length > 0 &&\n                <span className='error'>{this.state.errors.email}</span>}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  noValidate />\n                  {this.state.errors.password.length > 0 &&\n                    <span className='error' >{this.state.errors.password}</span>}\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg btn-primary btn-block\"\n              >\n                Sign in\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}